%D \module
%D   [     file=t-graded_proofs, % e.g. t-xxx
%D      version=2020.03.18, % e.g. 20xx.xx.xx
%D        title=Graded proofs, % e.g. \CONTEXT\ User Module
%D     subtitle='Definitions, Proofs, Theorems, etc',
%D       author=Joseph Berner,
%D         date=\currentdate, % e.g. \currentdate
%D    copyright=Berner, % e.g. <author>
%D      license=2-Clause BSD] % e.g. 'Public Domain' or 'GNU GPL 2.0'

\unprotect

\startluacode
	valid_lods = {}
	valid_lods["sketch"] = true
	valid_lods["terse"] = true
	valid_lods["detailed"] = true
		
	manual_overrides = {}
	manual_overrides["dog"] = "terse"
	
	
	used_proof_ids = {}

	
	-- Set default level of detail
	document_lod = "sketch"
	--            = "terse"
	--            = "detailed"
	
	-- These are global variables you can set/unset if you wish to use them.
	chapter_lod = nil
	section_lod = nil
	subsection_lod = nil
\stopluacode

\defineenumeration[gradedproof]
	[text=Proof,
	style=normal,
	title=yes,
	titleleft=,
	titleright=,
	location=serried,
	width=fit,
	right={. },
	%after={\hfill{\tfx \emph{////}}},
	after={\hfill{\tfx \square}},
	]

\let\StopGradedProof\stopgradedproof
\let\StartGradedProof\startgradedproof

\define\startgradedproof{\dosingleempty\startgradedproofoptions}
\def\startgradedproofoptions[#1]{
	\iffirstargument
	\startluacode
		if used_proof_ids["#1"] ~= nil then
			print("Duplicate proof ID!")
		end
		
		proof_id = "#1"
		used_proof_ids[proof_id] = true
	\stopluacode
	\fi
	\StartGradedProof
}

\define\stopgradedproof{
\StopGradedProof
\startluacode
	proof_id = nil
\stopluacode
}

\define[2]\gradedproof{
\startluacode
	local level_of_detail = "#1"
	if valid_lods[level_of_detail] == nil then
		print("Incorrect level of detail specified")
	end
	
	local appropriate_level = document_lod

	if chapter_lod ~= nil then
		appropriate_level = chapter_lod
	end
	
	if section_lod ~= nil then
		appropriate_level = section_lod
	end
	
	if subsection_lod ~= nil then
		appropriate_level = subsection_lod
	end
	
	if proof_id ~= nil and manual_overrides[proof_id] ~= nil then
		appropriate_level = manual_overrides[proof_id]
	end
	
	if level_of_detail == appropriate_level then
		context("#2")
	end

\stopluacode
}


